/*
 * Copyright (Â©) 2016 Jeff Harris <jefftharris@gmail.com>
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

apply plugin: 'com.android.application'

android {
    namespace 'com.jefftharris.passwdsafe'
    compileSdk 33
    defaultConfig {
        applicationId "com.jefftharris.passwdsafe"
        minSdkVersion 19
        resourceConfigurations += ['de', 'fr', 'nb']
        targetSdkVersion 33
        // <major><minor><bugfix><beta/extra>
        versionCode 6230002
        versionName "6.23.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString(),
                             "room.incremental":"true"]
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            proguardFiles += getDefaultProguardFile(
                    'proguard-android-optimize.txt')
            proguardFiles += 'proguard-rules.pro'
            proguardFiles += 'proguard-rules-debug.pro'
            testProguardFiles += getDefaultProguardFile(
                    'proguard-android-optimize.txt')
            testProguardFiles += 'proguard-rules-test.pro'
            ndk {
                debugSymbolLevel "FULL"
            }
        }
        release {
            minifyEnabled true
            proguardFiles += getDefaultProguardFile(
                    'proguard-android-optimize.txt')
            proguardFiles += 'proguard-rules.pro'
            ndk {
                debugSymbolLevel "FULL"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    productFlavors {
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    ndkVersion = '21.3.6528147'
    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
    }
    testOptions {
        animationsDisabled true
    }
}


dependencies {
    def room_version = "2.5.2"
    def yubikey_version = "2.3.0"
    def espresso_version = "3.5.1"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':lib')

    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation "androidx.room:room-runtime:$room_version"

    implementation "com.yubico.yubikit:yubiotp:$yubikey_version"
    implementation "com.yubico.yubikit:android:$yubikey_version"
    implementation 'com.github.tony19:logback-android:3.0.0'

    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Core library
    androidTestImplementation 'androidx.test:core:1.5.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
}
